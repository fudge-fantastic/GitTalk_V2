generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String
  email     String   @unique
  password  String
  credits   Int      @default(100)

  // Relations
  projects Project[]
}

model Repo {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  githubUrl String   @unique
  name      String
  description String?

  projects  Project[]
  commits   RepoCommit[]
}

model Project {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  projectName  String
  description  String?
  userId       String
  repoId       String

  // RAG / indexing status
  ragStatus    IndexingStatus @default(IDLE)
  lastIndexedAt DateTime?
  indexingError String?
  vectorCount   Int @default(0)
  embeddingProvider String? 
  vectorStore       String?

  user       User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  repo       Repo   @relation(fields: [repoId], references: [id], onDelete: Cascade)
}

enum IndexingStatus {
  IDLE
  PENDING
  INDEXING
  READY
  ERROR
  DISABLED
  STALE
}



model RepoCommit {
  id              String   @id @default(cuid())
  commitHash      String
  commitMessage   String
  commitUrl       String
  authorName      String
  authorUrl       String
  authorAvatarUrl String
  committedAt     DateTime

  repoId          String
  repo            Repo     @relation(fields: [repoId], references: [id], onDelete: Cascade)
  @@index([commitHash])
  @@unique([repoId, commitHash])
  @@index([repoId, committedAt])
}

