generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres@localhost:5433/postgres"
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String   @db.VarChar(30)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(100)
  credits   Int      @default(100)

  // Relations
  projects Project[]
}

model Project {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  projectName  String   @db.VarChar(100) // Moved here for user-defined naming
  githubUrl    String   @db.VarChar(200)
  description  String?  @db.VarChar(500)
  userId       String

  // Relations
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  repoCommit RepoCommit[]
}

model RepoCommit {
  id              String   @id @default(uuid())
  commitHash      String
  commitMessage   String
  commitUrl       String
  authorName      String
  authorUrl       String
  authorAvatarUrl String
  committedAt     DateTime

  projectId       String
  project         Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  @@index([commitHash])
}

model FileEmbeddingCache {
  id           String   @id @default(uuid())
  projectId    String
  filePath     String
  contentHash  String
  summary      String
  embedding    Float[]  // Use `Json` if Prisma doesnâ€™t support Float[]
  createdAt    DateTime @default(now())
}