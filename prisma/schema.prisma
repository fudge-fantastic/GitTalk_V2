generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String
  email     String   @unique
  password  String
  credits   Int      @default(100)

  // Relations
  projects Project[]
}

model Project {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  projectName  String // Moved here for user-defined naming
  githubUrl    String
  description  String?
  userId       String

  // Relations
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  repoCommit RepoCommit[]

}

model RepoCommit {
  id              String   @id @default(cuid())
  commitHash      String
  commitMessage   String
  commitUrl       String
  authorName      String
  authorUrl       String
  authorAvatarUrl String
  committedAt     DateTime

  projectId       String
  project         Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  @@index([commitHash])
  // Ensure we don't store duplicate commits per project
  @@unique([projectId, commitHash])
  // Optimize pagination by project/time
  @@index([projectId, committedAt])
}

model SummarizedDocument {
  id          String   @id @default(cuid())
  repoUrl     String
  filePath    String
  contentHash String   @unique
  summary     String
  embedding   Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}